FROM ubuntu:focal

RUN ln -fs /usr/share/zoneinfo/Europe/Prague /etc/localtime
RUN mkdir -p /clfs /sources && apt update && apt -y install --no-install-recommends wget ca-certificates gcc-9 python3 bison gawk flex rsync file xz-utils make texinfo swig python3-distutils libpython3-dev libssl-dev

ENV kernel_version=5.10.55
ENV binutils_version=2.37
ENV mpfr_version=4.1.0
ENV mpc_version=1.2.1
ENV gmp_version=6.2.1
ENV gcc_version=11.2.0
ENV glibc_version=2.34
ENV golang_version=1.16.6

ENV MINIMUM_KERNEL=5.10.0

ENV CLFS=/clfs
WORKDIR /sources

RUN wget \
	ftp://sourceware.org/pub/binutils/releases/binutils-${binutils_version}.tar.xz \
	https://www.mpfr.org/mpfr-current/mpfr-${mpfr_version}.tar.xz \
	https://ftp.gnu.org/gnu/mpc/mpc-${mpc_version}.tar.gz \
	https://gmplib.org/download/gmp/gmp-${gmp_version}.tar.xz \
	ftp://ftp.mpi-sb.mpg.de/pub/gnu/mirror/gcc.gnu.org/pub/gcc/releases/gcc-${gcc_version}/gcc-${gcc_version}.tar.xz \
	https://ftp.gnu.org/gnu/glibc/glibc-${glibc_version}.tar.xz \
	https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-${kernel_version}.tar.xz \
	https://golang.org/dl/go${golang_version}.linux-amd64.tar.gz \
    -P /sources

ENV LC_ALL=POSIX 
ENV PATH=/clfs/cross-tools/bin:/bin:/usr/bin
ENV CLFS_HOST=x86_64-pc-linux-gnu
ENV CLFS_TARGET=arm-linux-gnueabihf
ENV CLFS_ARCH=arm
ENV CLFS_FPU=vfpv4-d16
ENV CLFS_FLOAT=hard
ENV ARCH=${CLFS_ARCH}
ENV CLFS_ARM_ARCH=armv7-a
RUN mkdir -p $CLFS/cross-tools/${CLFS_TARGET} && ln -sfv ${CLFS}/cross-tools/ ${CLFS}/cross-tools/${CLFS_TARGET}/usr

# 1. build kernel headers0
RUN tar xvpf linux-${kernel_version}.tar.xz
WORKDIR /sources/linux-${kernel_version}
RUN make mrproper
RUN make headers_check
RUN apt install -y --no-install-recommends gcc libc6-dev
RUN make INSTALL_HDR_PATH=${CLFS}/cross-tools/${CLFS_TARGET} headers_install
WORKDIR /sources

# 2. build binutils
RUN tar xvpf binutils-${binutils_version}.tar.xz
RUN mkdir binutils-build
WORKDIR /sources/binutils-build
RUN ../binutils-${binutils_version}/configure \
	--prefix=${CLFS}/cross-tools \
	--target=${CLFS_TARGET} \
	--with-sysroot=${CLFS}/cross-tools/${CLFS_TARGET} \
	--disable-nls \
	--disable-multilib
RUN make configure-host
RUN make -j16
RUN make install
WORKDIR /sources

# 3. GCC static
RUN tar xvpf gcc-${gcc_version}.tar.xz
WORKDIR /sources/gcc-${gcc_version}
RUN tar xvpf ../mpfr-${mpfr_version}.tar.xz && mv mpfr-${mpfr_version} mpfr
RUN tar xvpf ../gmp-${gmp_version}.tar.xz && mv gmp-${gmp_version} gmp
RUN tar xvpf ../mpc-${mpc_version}.tar.gz && mv mpc-${mpc_version} mpc
WORKDIR /sources
RUN mkdir gcc-build
WORKDIR /sources/gcc-build
RUN apt install -y g++
RUN ../gcc-${gcc_version}/configure \
  --prefix=${CLFS}/cross-tools \
  --build=${CLFS_HOST} \
  --host=${CLFS_HOST} \
  --target=${CLFS_TARGET} \
  --with-sysroot=${CLFS}/cross-tools/${CLFS_TARGET} \
  --disable-nls \
  --disable-shared \
  --without-headers \
  --with-newlib \
  --disable-decimal-float \
  --disable-libgomp \
  --disable-libmudflap \
  --disable-libssp \
  --disable-libatomic \
  --disable-libquadmath \
  --disable-threads \
  --enable-languages=c \
  --disable-multilib \
  --with-mpfr-include=$(pwd)/../gcc-${gcc_version}/mpfr/src \
  --with-mpfr-lib=$(pwd)/mpfr/src/.libs \
  --with-arch=${CLFS_ARM_ARCH} \
  --with-float=${CLFS_FLOAT} \
  --with-fpu=${CLFS_FPU}
RUN make all-gcc all-target-libgcc -j16
RUN make install-gcc install-target-libgcc -j16
WORKDIR /sources

# 4. glibc
RUN tar xvpf glibc-${glibc_version}.tar.xz
WORKDIR /sources/glibc-build
RUN apt remove --purge g++ g++-9 -y 
RUN ../glibc-${glibc_version}/configure \
	CROSS_COMPILE=${CLFS_TARGET}- \
	CXX= \
	--prefix=${CLFS}/cross-tools/${CLFS_TARGET} \
	--build=${CLFS_HOST} \
	--host=${CLFS_TARGET} \
	--enable-kernel=${MINIMUM_KERNEL}
RUN make -j16
RUN make install

# 5. GCC final
WORKDIR /sources
RUN rm -rf gcc-build
WORKDIR /sources/gcc-build
RUN apt install -y g++
RUN ../gcc-${gcc_version}/configure \
	--prefix=${CLFS}/cross-tools \
	--build=${CLFS_HOST} \
	--host=${CLFS_HOST} \
	--target=${CLFS_TARGET} \
	--with-sysroot=${CLFS}/cross-tools/${CLFS_TARGET} \
	--disable-nls \
	--enable-languages=c,c++ \
	--enable-c99 \
	--enable-long-long \
	--enable-shared \
	--disable-libmudflap \
	--disable-multilib \
	--disable-libsanitizer \
	--with-mpfr-include=$(pwd)/../gcc-${gcc_version}/mpfr/src \
	--with-mpfr-lib=$(pwd)/mpfr/src/.libs \
	--with-arch=${CLFS_ARM_ARCH} \
	--with-float=${CLFS_FLOAT} \
	--with-fpu=${CLFS_FPU}
RUN make -j16
RUN make install
RUN cat /sources/gcc-${gcc_version}/gcc/limitx.h /sources/gcc-${gcc_version}/gcc/glimits.h /sources/gcc-${gcc_version}/gcc/limity.h > /clfs/cross-tools/lib/gcc/${CLFS_TARGET}/${gcc_version}/include-fixed/limits.h

ENV CROSS_COMPILE=${CLFS_TARGET}-
RUN apt install vim pkg-config libtool patch bc device-tree-compiler -y && apt autoremove -y

WORKDIR /sources
RUN tar xvpf go${golang_version}.linux-amd64.tar.gz
ENV PATH=/sources/go/bin:$PATH
ENV GOROOT=/sources/go/

ENV CC="${CLFS_TARGET}-gcc --sysroot=${CLFS}/targetfs"
ENV CXX="${CLFS_TARGET}-g++ --sysroot=${CLFS}/targetfs"
ENV AR="${CLFS_TARGET}-ar"
ENV AS="${CLFS_TARGET}-as"
ENV LD="${CLFS_TARGET}-ld --sysroot=${CLFS}/targetfs"
ENV RANLIB="${CLFS_TARGET}-ranlib"
ENV READELF="${CLFS_TARGET}-readelf"
ENV STRIP="${CLFS_TARGET}-strip"
ENV PKG_CONFIG_PATH=
ENV PKG_CONFIG_LIBDIR=${CLFS}/targetfs/usr/lib/pkgconfig
ENV PKG_CONFIG_SYSROOT_DIR=${CLFS}
ENV GOOS=linux
ENV GOARCH=arm

ENV IS64=

RUN mkdir -p /clfs/targetfs
WORKDIR /sources2/
